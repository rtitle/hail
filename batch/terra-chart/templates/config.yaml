apiVersion: v1
kind: ConfigMap
metadata:
  name: global-config
data:
  cloud: "azure"
  default_namespace: "default"
  docker_prefix: "terradevacrpublic.azurecr.io/hail/batch"
  docker_root_image: "ubuntu:22.04"
  batch_logs_storage_uri: "{{ .Values.persistence.workspaceManager.storageContainerUrl }}/{{ .Values.persistence.leoAppName }}/hailbatch/logs"
  query_storage_uri: "{{ .Values.persistence.workspaceManager.storageContainerUrl }}/{{ .Values.persistence.leoAppName }}/hailbatch/query"
  internal_ip: "dummy"
  azure_subscription_id: "dummy"
  azure_resource_group: "dummy"
  azure_location: "eastus"
  kubernetes_server_url: "dummy"
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: session-secret-key
data:
  session-secret-key: "somesupersecretsessionkey======="
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: deploy-config
data:
  deploy-config.json: |
    { "default_namespace": "default", "location": "k8s", "domain": "{{ .Values.relay.domain }}", "base_path": "{{ .Values.relay.subpath }}" }
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: batch-load-balancer-config
data:
  envoy.yaml: |
    static_resources:
      listeners:
      - address:
          socket_address:
            address: 0.0.0.0
            port_value: 8080
        filter_chains:
        - filters:
          - name: envoy.filters.network.http_connection_manager
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
              codec_type: AUTO
              stat_prefix: ingress_http
              route_config:
                name: local_route
                virtual_hosts:
                  - name: batch
                    domains: ["*"]
                    routes:
                      - match:
                          path_separated_prefix: "{{ .Values.relay.subpath }}/batch"
                        route:
                          timeout: 0s
                          cluster: batch
                      - match:
                          path_separated_prefix: "{{ .Values.relay.subpath }}/batch-driver"
                        route:
                          timeout: 0s
                          cluster: batch-driver
              http_filters:
                - name: envoy.filters.http.router
                  typed_config:
                    "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router
          transport_socket:
            name: envoy.transport_sockets.tls
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.DownstreamTlsContext
              common_tls_context:
                tls_certificates:
                # The following self-signed certificate pair is generated using:
                # $ openssl req -x509 -newkey rsa:2048 -keyout a/front-proxy-key.pem -out  a/front-proxy-crt.pem -days 3650 -nodes -subj '/CN=front-envoy'
                #
                # Instead of feeding it as an inline_string, certificate pair can also be fed to Envoy
                # via filename. Reference: https://envoyproxy.io/docs/envoy/latest/api-v3/config/core/v3/base.proto#config-core-v3-datasource.
                #
                # Or in a dynamic configuration scenario, certificate pair can be fetched remotely via
                # Secret Discovery Service (SDS). Reference: https://envoyproxy.io/docs/envoy/latest/configuration/security/secret.
                - certificate_chain:
                    inline_string: |
                      TODO: certs go here! how to use secrets?
                  private_key:
                    inline_string: |
                      TODO key goes here!
      clusters:
      - name: batch
        type: STRICT_DNS
        lb_policy: ROUND_ROBIN
        load_assignment:
          cluster_name: batch
          endpoints:
          - lb_endpoints:
            - endpoint:
                address:
                  socket_address:
                    address: 127.0.0.1
                    port_value: 5001
      - name: batch-driver
        type: STRICT_DNS
        lb_policy: ROUND_ROBIN
        load_assignment:
          cluster_name: batch-driver
          endpoints:
          - lb_endpoints:
            - endpoint:
                address:
                  socket_address:
                    address: 127.0.0.1
                    port_value: 5000
    admin:
      address:
        socket_address:
          address: 127.0.0.1
          port_value: 8001
